// <auto-generated />
using System;
using Campeonatos.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Campeonatos.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Campeonatos.Dominio.Clubes.Clube", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubes");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Clubes.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Amarelos")
                        .HasColumnType("int");

                    b.Property<int>("Assistencias")
                        .HasColumnType("int");

                    b.Property<int>("ClubeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gols")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumCamisa")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vermelhos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubeId");

                    b.ToTable("Jogadores");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Amarelos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("JogadorId")
                        .HasColumnType("int");

                    b.Property<int>("QtdeAmarelos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Amarelos");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Artilharia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Gols")
                        .HasColumnType("int");

                    b.Property<int>("JogadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Artilharia");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Assistencias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("JogadorId")
                        .HasColumnType("int");

                    b.Property<int>("QtdeAssistencias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Assistencias");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.PartidaFinalizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("PartidasId")
                        .HasColumnType("int");

                    b.Property<bool>("TeveVencedor")
                        .HasColumnType("bit");

                    b.Property<int>("VencedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartidasId");

                    b.HasIndex("VencedorId");

                    b.ToTable("PartidaFinalizacao");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Partidas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MandanteId")
                        .HasColumnType("int");

                    b.Property<int>("VisitanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MandanteId");

                    b.HasIndex("VisitanteId");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Vermelhos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("JogadorId")
                        .HasColumnType("int");

                    b.Property<int>("QtdeVermelhos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JogadorId");

                    b.ToTable("Vermelhos");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Clubes.Jogador", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Clubes.Clube", "Clube")
                        .WithMany("Jogadores")
                        .HasForeignKey("ClubeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clube");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Amarelos", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Clubes.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Artilharia", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Clubes.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Assistencias", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Clubes.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.PartidaFinalizacao", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Tabela.Partidas", "Partida")
                        .WithMany()
                        .HasForeignKey("PartidasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Campeonatos.Dominio.Clubes.Clube", "Vencedor")
                        .WithMany()
                        .HasForeignKey("VencedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partida");

                    b.Navigation("Vencedor");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Partidas", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Clubes.Clube", "Mandante")
                        .WithMany()
                        .HasForeignKey("MandanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Campeonatos.Dominio.Clubes.Clube", "Visitante")
                        .WithMany()
                        .HasForeignKey("VisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mandante");

                    b.Navigation("Visitante");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Tabela.Vermelhos", b =>
                {
                    b.HasOne("Campeonatos.Dominio.Clubes.Jogador", "Jogador")
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogador");
                });

            modelBuilder.Entity("Campeonatos.Dominio.Clubes.Clube", b =>
                {
                    b.Navigation("Jogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
